#!/usr/bin/env python3
import sys
from collections import defaultdict
from pathlib import Path

MAGMA = Path(__file__).resolve().parent.parent


def main() -> int:
    fuzzers_path = MAGMA / "fuzzers"
    groups: dict[str, list[Path]] = defaultdict(list)
    for fuzzer_path in fuzzers_path.iterdir():
        findings_sh_path = fuzzer_path / "findings.sh"
        if not findings_sh_path.is_file():
            continue

        findings_sh = findings_sh_path.read_text().splitlines()
        assert findings_sh[0].startswith("#!/bin/bash"), findings_sh_path
        findings_sh = "\n".join(
            f"    {l}" for l in findings_sh if not l.startswith("#") and l != ""
        )

        groups[findings_sh].append(fuzzer_path)

    output = f"""\
#!/bin/bash
# AUTO-GENERATED BY {sys.argv[0]}

if [ $# -lt 1 ]; then
    echo >&2 "usage: $0 <fuzzer> [mode]"
    exit 1
fi

ARG=$1
shift
case $ARG in
"""

    for findings_sh, paths in groups.items():
        output += "|".join(p.stem for p in paths) + ")\n"
        output += findings_sh + "\n    ;;\n"

    output += """\
*)
    echo >&2 "fuzzer $ARG is not recognized"
    exit 1
    ;;
esac"""

    print(output)
    return 0


if __name__ == "__main__":
    exit(main())
